openapi: 3.0.0
info:
  title: Home Funders API
  description: API documentation for Home Funders loan application platform
  version: 1.0.0
  contact:
    name: Home Funders Support
    email: support@homefunders.com

servers:
  - url: /api
    description: API base URL

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: User ID
        name:
          type: string
          description: User's full name
        email:
          type: string
          format: email
          description: User's email address
        phone:
          type: string
          description: User's phone number
        address:
          type: string
          description: User's address
        profileImage:
          type: string
          description: URL to user's profile image
        isAdmin:
          type: boolean
          description: Whether user is an admin
        isActive:
          type: boolean
          description: Whether user account is active
        createdAt:
          type: string
          format: date-time
          description: Account creation date

    Loan:
      type: object
      properties:
        _id:
          type: string
          description: Loan ID
        user:
          $ref: '#/components/schemas/User'
        loanType:
          type: string
          enum: [urban, rural]
          description: Type of loan
        status:
          type: string
          enum: [PENDING, APPROVED, REJECTED]
          description: Loan status
        amount:
          type: number
          description: Loan amount
        documents:
          type: object
          description: URLs to uploaded documents
        propertyLocation:
          type: string
          description: Property location
        propertyType:
          type: string
          description: Type of property
        createdAt:
          type: string
          format: date-time
          description: Loan application date
        approvedBy:
          type: string
          description: Admin ID who approved the loan
        approvedAt:
          type: string
          format: date-time
          description: Loan approval date
        rejectedBy:
          type: string
          description: Admin ID who rejected the loan
        rejectedAt:
          type: string
          format: date-time
          description: Loan rejection date
        rejectionReason:
          type: string
          description: Reason for loan rejection

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, phone, address]
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                phone:
                  type: string
                address:
                  type: string
      responses:
        201:
          description: User registered successfully
        400:
          description: Invalid input
        409:
          description: Email already exists

  /auth/login:
    post:
      summary: Login user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials

  /loans/urban/apply:
    post:
      summary: Apply for urban loan
      tags: [Loans]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [propertyLocation, loanAmount, propertyType]
              properties:
                propertyLocation:
                  type: string
                loanAmount:
                  type: number
                propertyType:
                  type: string
                airbnbProfile:
                  type: string
                  format: binary
                bankStatements:
                  type: string
                  format: binary
                aadhaarPan:
                  type: string
                  format: binary
                propertyPapers:
                  type: string
                  format: binary
                bankDetails:
                  type: string
                  format: binary
      responses:
        201:
          description: Loan application submitted
        400:
          description: Invalid input or missing documents
        401:
          description: Not authenticated

  /loans/rural/apply:
    post:
      summary: Apply for rural loan
      tags: [Loans]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [propertyLocation, loanAmount, propertyType]
              properties:
                propertyLocation:
                  type: string
                loanAmount:
                  type: number
                propertyType:
                  type: string
                landPapers:
                  type: string
                  format: binary
                bankStatements:
                  type: string
                  format: binary
                aadhaarPan:
                  type: string
                  format: binary
                propertyPhotos:
                  type: string
                  format: binary
                bankDetails:
                  type: string
                  format: binary
      responses:
        201:
          description: Loan application submitted
        400:
          description: Invalid input or missing documents
        401:
          description: Not authenticated

  /loans/me:
    get:
      summary: Get user's loans
      tags: [Loans]
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of user's loans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        401:
          description: Not authenticated

  /loans/{id}:
    get:
      summary: Get loan details
      tags: [Loans]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Loan details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        401:
          description: Not authenticated
        403:
          description: Not authorized
        404:
          description: Loan not found

  /admin/loans:
    get:
      summary: Get all loans (Admin only)
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of all loans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        401:
          description: Not authenticated
        403:
          description: Not authorized as admin

  /admin/loans/{id}/approve:
    put:
      summary: Approve loan (Admin only)
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Loan approved
        401:
          description: Not authenticated
        403:
          description: Not authorized as admin
        404:
          description: Loan not found

  /admin/loans/{id}/reject:
    put:
      summary: Reject loan (Admin only)
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [reason]
              properties:
                reason:
                  type: string
      responses:
        200:
          description: Loan rejected
        401:
          description: Not authenticated
        403:
          description: Not authorized as admin
        404:
          description: Loan not found

  /admin/users:
    get:
      summary: Get all users (Admin only)
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        401:
          description: Not authenticated
        403:
          description: Not authorized as admin

  /admin/users/{id}:
    get:
      summary: Get user details (Admin only)
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Not authenticated
        403:
          description: Not authorized as admin
        404:
          description: User not found

    put:
      summary: Update user (Admin only)
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                isActive:
                  type: boolean
      responses:
        200:
          description: User updated
        401:
          description: Not authenticated
        403:
          description: Not authorized as admin
        404:
          description: User not found

    delete:
      summary: Delete user (Admin only)
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User deleted
        401:
          description: Not authenticated
        403:
          description: Not authorized as admin
        404:
          description: User not found 